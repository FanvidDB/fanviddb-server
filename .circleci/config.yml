version: 2.1

orbs:
  python: circleci/python@1.3.2
  node: circleci/node@4.2.0

jobs:
  backend-lint:
    executor:
      name: python/default
      tag: 3.7.10
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run: make backend-lint
  backend-test:
    docker:
      - image: cimg/python:3.7.10
        environment:
          AUTH_SECRET_KEY: secret
          DATABASE_URL: postgres://circle_test:fanviddb_test@localhost/circle_test?sslmode=disable
          EMAIL_TOKEN_SECRET_KEY: secret
      - image: circleci/postgres:12.6
        environment:
          POSTGRES_USER: circle_test
          POSTGRES_PASSWORD: fanviddb_test
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip

      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1

      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: run tests
          command: |
            mkdir test-results
            pytest --junitxml=test-results/report.xml
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
  frontend-lint:
    executor:
      name: node/default
      tag: '15.11'
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          command: make frontend-lint
  frontend-test:
    executor:
      name: node/default
      tag: '15.11'
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          command: yarn test

workflows:
  main:
    jobs:
      - backend-test
      - backend-lint
      - frontend-test
